{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.jsx","components/Scroll.jsx","containers/App.js","index.js"],"names":["Card","props","name","username","email","id","className","toUpperCase","src","alt","CardList","robots","cardsArray","map","user","i","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","console","log","Component","ReactDOM","render","document","getElementById"],"mappings":"kOAmBeA,EAjBF,SAACC,GAAW,IACdC,EAA6BD,EAA7BC,KAAMC,EAAuBF,EAAvBE,SAAUC,EAAaH,EAAbG,MAAOC,EAAMJ,EAANI,GAChC,OACE,kBAAC,WAAD,KACE,yBAAKC,UAAU,iDACX,wBAAIA,UAAU,SAASJ,EAAKK,eAC9B,yBAAKC,IAAG,+BAA0BH,EAA1B,iBAA6CI,IAAI,UACzD,6BACE,uBAAGH,UAAU,SAASH,GACtB,uBAAGG,UAAU,SAASF,OCOjBM,EAfE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACZC,EAAaD,EAAOE,KAAI,SAACC,EAAMC,GACnC,OACE,kBAAC,EAAD,CACEC,IAAKD,EACLV,GAAIM,EAAOI,GAAGV,GACdH,KAAMS,EAAOI,GAAGb,KAChBC,SAAUQ,EAAOI,GAAGZ,SACpBC,MAAOO,EAAOI,GAAGX,WAIvB,OAAO,kBAAC,WAAD,KAAWQ,ICFLK,EAXG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAClB,OACE,yBAAKZ,UAAU,OACb,2BAAOA,UAAU,iCACjBa,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCDDI,G,MAJA,SAACrB,GACd,OAAO,yBAAKK,UAAU,aAAaL,EAAMsB,YC8C5BC,E,kDA5Cb,aAAe,IAAD,8BACZ,gBAiBFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAjB1C,EAAKC,MAAQ,CACXpB,OAAQ,GACRiB,YAAa,IAJH,E,gEAQO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACL,EAAKT,SAAS,CAAEhB,OAAQyB,S,+BAQpB,IAAD,EACuBC,KAAKN,MAA5BpB,EADA,EACAA,OAAQiB,EADR,EACQA,YACTU,EAAiB3B,EAAO4B,QAAO,SAACC,GACpC,OAAOA,EAAMtC,KACVuC,cACAC,SAASd,EAAYa,kBAG1B,OADAE,QAAQC,IAAIN,GAEV,yBAAKhC,UAAU,MACb,6BACE,0CACA,kBAAC,EAAD,CAAWY,aAAcmB,KAAKZ,kBAEhC,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAUd,OAAQ2B,U,GAtCVO,a,MCClBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.87988712.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\n\r\nconst Card = (props) => {\r\n    const {name, username, email, id} = props\r\n  return (\r\n    <Fragment>\r\n      <div className=\"tc bg-green dib br3 pa2 ma2 grow bw1 shadow-4\">\r\n          <h2 className='fName'>{name.toUpperCase()}</h2>\r\n        <img src={`https://robohash.org/${id}?size=200x200`} alt=\"Robot\" />\r\n        <div>\r\n          <p className='uName'>{username}</p>\r\n          <p className='email'>{email}</p>\r\n\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { Fragment } from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n  const cardsArray = robots.map((user, i) => {\r\n    return (\r\n      <Card\r\n        key={i}\r\n        id={robots[i].id}\r\n        name={robots[i].name}\r\n        username={robots[i].username}\r\n        email={robots[i].email}\r\n      />\r\n    );\r\n  });\r\n  return <Fragment>{cardsArray}</Fragment>;\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n  return (\r\n    <div className='pa2'>\r\n      <input className='pa3 ba b--green bg-light-green' \r\n      type=\"search\" \r\n      placeholder=\"Search Robots\" \r\n      onChange={searchChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport \"./scroll.css\";\r\n\r\nconst Scroll = (props) => {\r\n  return <div className='scrolling'>{props.children}</div>;\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { Component } from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\"\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((users) => {\r\n        this.setState({ robots: users });\r\n      });\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const {robots, searchfield} = this.state\r\n    const filteredRobots = robots.filter((robot) => {\r\n      return robot.name\r\n        .toLowerCase()\r\n        .includes(searchfield.toLowerCase());\r\n    });\r\n    console.log(filteredRobots);\r\n    return (\r\n      <div className=\"tc\">\r\n        <div>\r\n          <h1>ROBOSOCIAL</h1>\r\n          <SearchBox searchChange={this.onSearchChange} />\r\n        </div>\r\n        <Scroll>\r\n          <CardList robots={filteredRobots} />\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport \"tachyons\";\n\nReactDOM.render(\n  <App/>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}